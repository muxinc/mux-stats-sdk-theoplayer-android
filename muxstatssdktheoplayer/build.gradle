apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        versionCode 1
        versionName project.ext.versionName
        multiDexEnabled true

        buildConfigField("String", "MUX_PLUGIN_VERSION", "\"${versionName}\"")
        buildConfigField("String", "MUX_PLUGIN_NAME", "\"android-theoplayer-mux\"")

        testInstrumentationRunner "androidx.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions 'api'

    productFlavors {
        minapi16 {
            dimension 'api'
        }
        minapi21 {
            dimension 'api'
            minSdkVersion 21
        }
        minapi16ads {
            dimension 'api'
        }
        minapi21ads {
            dimension 'api'
            minSdkVersion 21
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    build  {
        doLast {
            productFlavors.each {
                flavor ->
                    def versionName = flavor.name.replaceAll(/_/, ".")
                    if (!versionName.endsWith(".ads")) {
                        copy {
                            from "${buildDir}/outputs/aar/${project.name}-${flavor.name}-release.aar", "${buildDir}/outputs/mapping/${flavor.name}Release/mapping.txt"
                            into "${buildDir}/outputs/artifacts/"
                            rename("${project.name}-${flavor.name}-release.aar", "mux-${versionName}.aar")
                            rename("mapping.txt", "mapping-${versionName}.txt")
                            File aarFile = new File("${buildDir}/outputs/artifacts/mux-${versionName}.aar")
                            println "===++++ >>>>> ${aarFile.name} size = ${aarFile.size()}, exists ${aarFile.exists()}";
                            if ( aarFile.length() > 150000 ) {
                                // Fail
                                throw new GradleException(
                                        "${project.name}-${flavor.name}-release.aar exceed 120KB!");
                            }
                        }
                    }
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'

    minapi16adsCompileOnly files("../common_libs/theoplayer-android-dist-56d3a9e5-4252-4bca-b650-180c8f16ce52-2.80.0-minapi16-release.aar")
    minapi21adsCompileOnly files("../common_libs/theoplayer-android-dist-56d3a9e5-4252-4bca-b650-180c8f16ce52-2.80.0-minapi21-release.aar")
    minapi16CompileOnly files("../common_libs/theoplayer-android-dist-56d3a9e5-4252-4bca-b650-180c8f16ce52-2.80.0-minapi16-release.aar")
    minapi21CompileOnly files("../common_libs/theoplayer-android-dist-56d3a9e5-4252-4bca-b650-180c8f16ce52-2.80.0-minapi21-release.aar")

    compileOnly 'com.google.ads.interactivemedia.v3:interactivemedia:3.18.0'
    compileOnly 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    testImplementation 'junit:junit:4.12'

    api "com.mux:stats.muxcore:${project.ext.muxCoreVersion}"
}
